events {
  worker_connections  1024;
}

http {
  # set client max body size to allow single request file uploads
	client_max_body_size 800M;

  # don't send nginx version with every response
  server_tokens off;

  # set api request throttling
	limit_req_zone $binary_remote_addr zone=api:10m rate=4r/s;

  # set teal upstream api location to the teal container
	upstream teal_upstream {
    server teal:9000;
	}

  # set upstream acmetool container
  upstream acmetool {
    server 127.0.0.1:402;
  }
 
	# set upstream live manager
	upstream live-manager_upstream {
		server live-manager:8080;
	} 

  # send the corrent MIME type with static files
  include /etc/nginx/mime.types;

  # server listening on https port 443
	server {
		listen 443 ssl http2;
		server_name api.teal.cool;
		client_max_body_size 200M;

    # security headers
    add_header Strict-Transport-Security max-age=15768000;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Xss-Protection "1";
    add_header Content-Security-Policy "default-src 'self' https://api.teal.cool; script-src 'self' https://ajax.googleapis.com https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://netdna.bootstrapcdn.com; font-src https://netdna.bootstrapcdn.com";

		ssl_certificate /var/lib/acme/live/api.teal.cool/fullchain;
		ssl_certificate_key /var/lib/acme/live/api.teal.cool/privkey;
		ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

		ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    access_log off;

    # block where nginx manages server sent events
		location ~ /(organizations|programs)/(.*)/latest {
			#refuse if the method is not get
			if ($request_method != GET) { 
            return 403;
      }
	  	proxy_pass http://live-manager_upstream;
		}

    # block where we pass acme challenges to acmetool
    location /.well-known/acme-challenge/ {
      proxy_pass http://acmetool;
    }

    # block where nginx manages all other api calls
    location / {
    	limit_req zone=api burst=20;
			proxy_cache_bypass $http_pragma;
			proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://teal_upstream;
		}
	}

  # frontend block
	server {
		listen 443 ssl http2;
		server_name teal.cool;

    # security headers
    add_header Strict-Transport-Security max-age=15768000;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Xss-Protection "1";
    add_header Content-Security-Policy "default-src 'self' https://api.teal.cool; script-src 'self' https://ajax.googleapis.com https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://netdna.bootstrapcdn.com; font-src https://netdna.bootstrapcdn.com";

		ssl_certificate /var/lib/acme/live/teal.cool/fullchain;
		ssl_certificate_key /var/lib/acme/live/teal.cool/privkey;
		ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

		ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    access_log off;

    # block where we pass acme challenges to acmetool
    location /.well-known/acme-challenge/ {
      proxy_pass http://acmetool;
    }

		location / {
			root /frontend/;
			try_files $uri$args $uri$args/ $uri/ /index.html =404;
		}
	}

  # listen for unencrypted feed and download requests, redirect everyone else to https
  server {
    listen 80;
    server_name  api.teal.cool;
    location ~ /programs/(.*)/feed.xml  {
      proxy_cache_bypass $http_pragma;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://teal_upstream;
    }

    location ~ /download/(.*).mp3  {
      proxy_cache_bypass $http_pragma;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://teal_upstream;
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # redirect all http requests for the front end to https
  server {
    listen 80;
    server_name  teal.cool;
    location / {
      return 301 https://$host$request_uri;
    }
  }

  # server block where nginx will listen to incoming uploads from the encoder
	server {
		listen 23021;

    location / {
			proxy_cache_bypass $http_pragma;
			proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://teal_upstream;
		}
	}
}
